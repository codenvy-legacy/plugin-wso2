RootElement {
    Relation {
        SINGLE
    }

    Components {
        { Log }
        { Property }
        { PayloadFactory }
        { Send }
        { Header }
        { Respond }
        { Filter }
        { Switch_mediator }
        { Sequence }
        { Enrich }
        { LoopBack }
        { CallTemplate }
        { Call }
    }
}

Elements {
    Log {
        Relation {
            SINGLE
        }

        Properties {
            LogCategory {
                Type {
                    STRING
                }
                Value {
                    INFO
                }
            }

            LogLevel {
                Type {
                    STRING
                }
                Value {
                    SIMPLE
                }
            }
            
            LogSeparator {
                Type {
                    STRING
                }
                Value {
                    enter_text
                }
            }
            
            LogProperties {
                Type {
                    STRING
                }
                Value {
                    enter_properties
                }
            }
            
            Description{
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }
    
    Property{
        Relation {
            SINGLE
        }

        Properties {
            PropertyName {
                Type { 
                    STRING
                }
                Value { 
                    propertyName
                }
            }
            PropertyAction {
                Type { 
                    STRING 
                }
                Value {
                    set
                }
            }
            ValueType {
                Type {
                    STRING 
                }
                Value { 
                    LITERAL
                }
            }
            PropertyDataType {
                Type { 
                    STRING 
                }
                Value {
                    $STRING
                }
            }
            ValueLiteral {
                Type {
                    STRING
                }
                Value { 
                    some_Value
                }
            }
            ValueStringPattern {
                Type {
                    STRING
                }
                Value {
                    enter_value_string_pattern
                }
            }
            ValueStringCaptureGroup {
                Type {
                    INTEGER
                }
                Value {
                    0
                }
            }
            PropertyScope {
                Type {
                    STRING
                }
                Value {
                    Synapse
                }
            }
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    PayloadFactory {
        Relation {
            SINGLE
        }

        Properties {
            PayloadFormat {
                Type {
                    STRING
                }
                Value {
                    inline
                }
            }
            Format {
                Type {
                    STRING
                }
                Value {
                    inline
                }
            }
            Args {
                Type {
                    STRING
                }
                Value {
                    enter_arguments
                }
            }
             MediaType {
                Type {
                    STRING
                }
                Value {
                    xml
                }
            }
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    Send {
        Relation {
            SINGLE
        }

        Properties {
            SkipSerialization {
                Type {
                    BOOLEAN
                }
                Value {
                    false
                }
            }
            ReceivingSequencerType {
                Type {
                    STRING
                }
                Value {
                    Default
                }
            }
            BuildMessageBeforeSending {
                Type {
                    BOOLEAN
                }
                Value {
                    false
                }
            }
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    Header {
        Relation {
            SINGLE
        }

        Properties {
            HeaderAction {
                Type {
                    STRING
                }
                Value {
                    set
                }
            }
            Scope {
                Type {
                    STRING
                }
                Value {
                    Synapse
                }
            }
            ValueType {
                Type {
                    STRING
                }
                Value {
                    LITERAL
                }
            }
            ValueLiteral {
                Type {
                    STRING
                }
                Value {
                    header_Value
                }
            }
            HeaderName {
                Type {
                    STRING
                }
                Value {
                    header_name
                }
            }
        }
    }

    Respond {
        Relation {
            SINGLE
        }

        Properties {
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    Filter {
        Relation {
            SINGLE
        }

        Properties {
            ConditionType {
                Type {
                    STRING
                }
                Value {
                    SOURCE_AND_REGEX
                }
            }
            Source {
                Type {
                    STRING
                }
                Value {
                    get-property
                }
            }
            RegularExpression {
                Type {
                    STRING
                }
                Value {
                    default/regex
                }
            }
        }

        Components {
            { Log }
            { Property }
            { PayloadFactory }
            { Send }
            { Header }
            { Respond }
            { Filter }
            { Switch_mediator }
            { Sequence }
            { Enrich }
            { LoopBack }
            { CallTemplate }
            { Call }
        }
    }

    Switch_mediator {
        Relation {
            SINGLE
        }

        Properties {
            SourceXpath {
                Type {
                    STRING
                }
                Value {
                    default/xpath
                }
            }
            CaseBranches {
                Type {
                    STRING
                }
                Value {
                    enter_case_branches
                }
            }
        }

        Components {
            { Log }
            { Property }
            { PayloadFactory }
            { Send }
            { Header }
            { Respond }
            { Filter }
            { Switch_mediator }
            { Sequence }
            { Enrich }
            { LoopBack }
            { CallTemplate }
            { Call }
        }
    }

    Sequence {

        Relation {
            SINGLE
        }

        Properties {
            ReferringSequenceType {
                Type {
                    STRING
                }
                Value {
                    STATIC
                }
            }
            StaticReferenceKey {
                Type {
                    STRING
                }
                Value {
                    Sequence
                }
            }
        }
    }

    Enrich {
        Relation {
            SINGLE
        }

        Properties {
            CloneSource {
                Type {
                    BOOLEAN
                }
                Value {
                    false
                }
            }
            SourceType {
                Type {
                    STRING
                }
                Value {
                    custom
                }
            }
            SourceXpath {
                Type {
                    STRING
                }
                Value {
                    default/xpath
                }
            }
            TargetAction {
                Type {
                    STRING
                }
                Value {
                    replace
                }
            }
            TargetType {
                Type {
                    STRING
                }
                Value {
                    custom
                }
            }
            TargetXpath {
                Type {
                    STRING
                }
                Value {
                    default/xpath
                }
            }
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    LoopBack {
        Relation {
            SINGLE
        }

        Properties {
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    CallTemplate {
        Relation {
            SINGLE
        }

        Properties {
            AvailableTemplates {

                Type {
                    STRING
                }
                Value {
                    enter_templates
                }
            }
            TargetTemplate {
                Type {
                    STRING
                }
                Value {
                    enter_target_template
                }
            }
            Parameters {
                Type {
                    STRING
                }
                Value {
                    enter_parameters
                }
            }
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }

    Call {
        Relation {
            SINGLE
        }

        Properties {
            EndpointType {
                Type {
                    STRING
                }
                Value {
                    INLINE
                }
            }
            Description {
                Type {
                    STRING
                }
                Value {
                    enter_description
                }
            }
        }
    }
}

Connections {
    Connection {
        Type {
            DIRECTED
        }
        Pairs {
            {Log <> Log}
            {Log <> Property}
            {Log <> PayloadFactory}
            {Log <> Send}
            {Log <> Header}
            {Log <> Respond}
            {Log <> Filter}
            {Log <> Switch_mediator}
            {Log <> Sequence}
            {Log <> Enrich}
            {Log <> LoopBack}
            {Log <> CallTemplate}
            {Log <> Call}
            {Property <> Log}
            {Property <> Property}
            {Property <> PayloadFactory}
            {Property <> Send}
            {Property <> Header}
            {Property <> Respond}
            {Property <> Filter}
            {Property <> Switch_mediator}
            {Property <> Sequence}
            {Property <> Enrich}
            {Property <> LoopBack}
            {Property <> CallTemplate}
            {Property <> Call}
            {PayloadFactory <> Log}
            {PayloadFactory <> Property}
            {PayloadFactory <> PayloadFactory}
            {PayloadFactory <> Send}
            {PayloadFactory <> Header}
            {PayloadFactory <> Respond}
            {PayloadFactory <> Filter}
            {PayloadFactory <> Switch_mediator}
            {PayloadFactory <> Sequence}
            {PayloadFactory <> Enrich}
            {PayloadFactory <> LoopBack}
            {PayloadFactory <> CallTemplate}
            {PayloadFactory <> Call}
            {Send <> Log}
            {Send <> Property}
            {Send <> PayloadFactory}
            {Send <> Send}
            {Send <> Header}
            {Send <> Respond}
            {Send <> Filter}
            {Send <> Switch_mediator}
            {Send <> Sequence}
            {Send <> Enrich}
            {Send <> LoopBack}
            {Send <> CallTemplate}
            {Send <> Call}
            {Header <> Log}
            {Header <> Property}
            {Header <> PayloadFactory}
            {Header <> Send}
            {Header <> Header}
            {Header <> Respond}
            {Header <> Filter}
            {Header <> Switch_mediator}
            {Header <> Sequence}
            {Header <> Enrich}
            {Header <> LoopBack}
            {Header <> CallTemplate}
            {Header <> Call}
            {Filter <> Log}
            {Filter <> Property}
            {Filter <> PayloadFactory}
            {Filter <> Send}
            {Filter <> Header}
            {Filter <> Respond}
            {Filter <> Filter}
            {Filter <> Switch_mediator}
            {Filter <> Sequence}
            {Filter <> Enrich}
            {Filter <> LoopBack}
            {Filter <> CallTemplate}
            {Filter <> Call}
            {Switch_mediator <> Log}
            {Switch_mediator <> Property}
            {Switch_mediator <> PayloadFactory}
            {Switch_mediator <> Send}
            {Switch_mediator <> Header}
            {Switch_mediator <> Respond}
            {Switch_mediator <> Filter}
            {Switch_mediator <> Switch_mediator}
            {Switch_mediator <> Sequence}
            {Switch_mediator <> Enrich}
            {Switch_mediator <> LoopBack}
            {Switch_mediator <> CallTemplate}
            {Switch_mediator <> Call}
            {Sequence <> Log}
            {Sequence <> Property}
            {Sequence <> PayloadFactory}
            {Sequence <> Send}
            {Sequence <> Header}
            {Sequence <> Respond}
            {Sequence <> Filter}
            {Sequence <> Switch_mediator}
            {Sequence <> Sequence}
            {Sequence <> Enrich}
            {Sequence <> LoopBack}
            {Sequence <> CallTemplate}
            {Sequence <> Call}
            {Enrich <> Log}
            {Enrich <> Property}
            {Enrich <> PayloadFactory}
            {Enrich <> Send}
            {Enrich <> Header}
            {Enrich <> Respond}
            {Enrich <> Filter}
            {Enrich <> Switch_mediator}
            {Enrich <> Sequence}
            {Enrich <> Enrich}
            {Enrich <> LoopBack}
            {Enrich <> CallTemplate}
            {Enrich <> Call}
            {LoopBack <> Log}
            {LoopBack <> Property}
            {LoopBack <> PayloadFactory}
            {LoopBack <> Send}
            {LoopBack <> Header}
            {LoopBack <> Respond}
            {LoopBack <> Filter}
            {LoopBack <> Switch_mediator}
            {LoopBack <> Sequence}
            {LoopBack <> Enrich}
            {LoopBack <> LoopBack}
            {LoopBack <> CallTemplate}
            {LoopBack <> Call}
            {CallTemplate <> Log}
            {CallTemplate <> Property}
            {CallTemplate <> PayloadFactory}
            {CallTemplate <> Send}
            {CallTemplate <> Header}
            {CallTemplate <> Respond}
            {CallTemplate <> Filter}
            {CallTemplate <> Switch_mediator}
            {CallTemplate <> Sequence}
            {CallTemplate <> Enrich}
            {CallTemplate <> LoopBack}
            {CallTemplate <> CallTemplate}
            {CallTemplate <> Call}
            {Call <> Log}
            {Call <> Property}
            {Call <> PayloadFactory}
            {Call <> Send}
            {Call <> Header}
            {Call <> Respond}
            {Call <> Filter}
            {Call <> Switch_mediator}
            {Call <> Sequence}
            {Call <> Enrich}
            {Call <> LoopBack}
            {Call <> CallTemplate}
            {Call <> Call}
        }
    }
}